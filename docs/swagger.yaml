basePath: '{{.BasePath}}'
definitions:
  article.Dto:
    properties:
      content:
        example: 文章内容
        type: string
      desc:
        example: 文章描述
        type: string
      gmtCreate:
        example: "2006-01-02 15:04:05"
        type: string
      gmtModified:
        example: "2006-01-02 15:04:05"
        type: string
      gmtPublish:
        example: "2006-01-02 15:04:05"
        type: string
      id:
        example: 1
        type: integer
      previewImg:
        example: 文章预览图片
        type: string
      status:
        example: 0
        type: integer
      title:
        example: 文章标题
        type: string
    type: object
  article.OpenDto:
    properties:
      content:
        example: 文章内容
        type: string
      desc:
        example: 文章描述
        type: string
      gmtCreate:
        example: "2006-01-02 15:04:05"
        type: string
      gmtModified:
        example: "2006-01-02 15:04:05"
        type: string
      gmtPublish:
        example: "2006-01-02 15:04:05"
        type: string
      id:
        example: 1
        type: integer
      previewImg:
        example: 文章预览图片
        type: string
      title:
        example: 文章标题
        type: string
    type: object
  auth.TokenResponse:
    properties:
      refresh_token:
        description: 用于刷新Token，默认30min过期
        type: string
      token:
        description: 用于调用接口传入Authorization，默认300s过期
        type: string
    type: object
  util.JsonTime:
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: '{{.Description}}'
  license: {}
  title: '{{.Title}}'
  version: '{{.Version}}'
paths:
  /api/v1/articles:
    get:
      description: Query articles, include no published articles
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/article.Dto'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      summary: Query articles
      tags:
      - article
  /api/v1/auth/login:
    post:
      description: Login and get the token and refresh token
      parameters:
      - description: login username
        in: query
        name: username
        required: true
        type: string
      - description: login password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: obj
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login
      tags:
      - auth
  /api/v1/auth/refresh_token:
    post:
      description: Refresh and get the new token with refresh token
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: refresh token
        in: query
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: obj
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Refresh and get the new token
      tags:
      - auth
  /open/v1/articles:
    get:
      description: Query published articles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/article.OpenDto'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      summary: Query published articles
      tags:
      - article
  /open/v1/articles/{id}:
    get:
      description: Get published article by id
      parameters:
      - description: Article Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.OpenDto'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get published article by id
      tags:
      - article
swagger: "2.0"
