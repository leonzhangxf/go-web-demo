// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-09-23 19:19:54.6075898 +0800 CST m=+0.059001101

package docs

import (
	"bytes"
	"encoding/json"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/articles": {
            "get": {
                "description": "Query articles, include no published articles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Query articles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/article.Dto"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Login and get the token and refresh token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "login username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "login password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "obj"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh_token": {
            "post": {
                "description": "Refresh and get the new token with refresh token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh and get the new token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "refresh token",
                        "name": "refresh_token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "obj"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/open/v1/articles": {
            "get": {
                "description": "Query published articles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Query published articles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/article.OpenDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/open/v1/articles/{id}": {
            "get": {
                "description": "Get published article by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Get published article by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/article.OpenDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "article.Dto": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "文章内容"
                },
                "desc": {
                    "type": "string",
                    "example": "文章描述"
                },
                "gmtCreate": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "gmtModified": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "gmtPublish": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "previewImg": {
                    "type": "string",
                    "example": "文章预览图片"
                },
                "status": {
                    "type": "integer",
                    "example": 0
                },
                "title": {
                    "type": "string",
                    "example": "文章标题"
                }
            }
        },
        "article.OpenDto": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "文章内容"
                },
                "desc": {
                    "type": "string",
                    "example": "文章描述"
                },
                "gmtCreate": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "gmtModified": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "gmtPublish": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "previewImg": {
                    "type": "string",
                    "example": "文章预览图片"
                },
                "title": {
                    "type": "string",
                    "example": "文章标题"
                }
            }
        },
        "auth.TokenResponse": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "description": "用于刷新Token，默认30min过期",
                    "type": "string"
                },
                "token": {
                    "description": "用于调用接口传入Authorization，默认300s过期",
                    "type": "string"
                }
            }
        },
        "util.JsonTime": {
            "type": "object"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{Schemes: []string{}}

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
